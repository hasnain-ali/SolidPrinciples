@model SolidPrinciples.WebApp.Models.ChangePassword
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Security: Change Password</h2>
<div class="panel panel-info">
    <div class="panel-body">
        <span class="glyphicon glyphicon-info-sign"></span>&nbsp;
        You should create a strong password that uses upper case and lower case letters, at least one number. A password can be 8 to 256 character long.
    </div>
</div>

@using (Html.BeginForm("ChangePassword", "Security", FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()

    if (ViewData.ContainsKey("ErrorMessage"))
    {
        <div class="alert alert-warning">
            <span class="glyphicon glyphicon-warning-sign"></span>&nbsp;@ViewData["ErrorMessage"]
        </div>
    }

    if (ViewData.ContainsKey("Message"))
    {
        <div class="alert alert-success">
            <span class="glyphicon glyphicon-info-sign"></span>&nbsp;@ViewData["Message"]
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(m => m.CurrentPassword, "Current Password")
        @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control", @maxlength = "256" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, "New Password")
        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @maxlength = "256" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmedNewPassword, "Confirm New Password")
        @Html.PasswordFor(m => m.ConfirmedNewPassword, new { @class = "form-control", @maxlength = "256" })
    </div>
    
    <button type="submit" class="btn btn-primary">Change Password</button>
    <button type="button" class="btn btn-default">Cancel</button>
}
